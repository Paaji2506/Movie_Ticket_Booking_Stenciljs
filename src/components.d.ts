/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AboutPage {
    }
    interface AddMovie {
    }
    interface AddTheater {
    }
    interface AddthMovie {
    }
    interface AdminHome {
    }
    interface AppRoot {
    }
    interface BookTicket {
        "movname": string;
    }
    interface ContactPage {
    }
    interface ErrorMessage {
        "message": string;
        "success": boolean;
    }
    interface MaFooter {
    }
    interface MaHeader {
    }
    interface MaHome {
    }
    interface MovieList {
    }
    interface MoviePopup {
    }
    interface MoviesPage {
    }
    interface SignupPage {
    }
    interface TheaterList {
    }
    interface TicketPage {
        "date": string;
        "movname": string;
        "price": number;
        "quan": number;
    }
    interface UcSideDrawer {
        "open": () => Promise<void>;
        "opened": boolean;
    }
    interface UcSpinner {
    }
    interface UpdateMovie {
    }
    interface UpdateTheater {
    }
}
export interface MoviePopupCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMoviePopupElement;
}
declare global {
    interface HTMLAboutPageElement extends Components.AboutPage, HTMLStencilElement {
    }
    var HTMLAboutPageElement: {
        prototype: HTMLAboutPageElement;
        new (): HTMLAboutPageElement;
    };
    interface HTMLAddMovieElement extends Components.AddMovie, HTMLStencilElement {
    }
    var HTMLAddMovieElement: {
        prototype: HTMLAddMovieElement;
        new (): HTMLAddMovieElement;
    };
    interface HTMLAddTheaterElement extends Components.AddTheater, HTMLStencilElement {
    }
    var HTMLAddTheaterElement: {
        prototype: HTMLAddTheaterElement;
        new (): HTMLAddTheaterElement;
    };
    interface HTMLAddthMovieElement extends Components.AddthMovie, HTMLStencilElement {
    }
    var HTMLAddthMovieElement: {
        prototype: HTMLAddthMovieElement;
        new (): HTMLAddthMovieElement;
    };
    interface HTMLAdminHomeElement extends Components.AdminHome, HTMLStencilElement {
    }
    var HTMLAdminHomeElement: {
        prototype: HTMLAdminHomeElement;
        new (): HTMLAdminHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLBookTicketElement extends Components.BookTicket, HTMLStencilElement {
    }
    var HTMLBookTicketElement: {
        prototype: HTMLBookTicketElement;
        new (): HTMLBookTicketElement;
    };
    interface HTMLContactPageElement extends Components.ContactPage, HTMLStencilElement {
    }
    var HTMLContactPageElement: {
        prototype: HTMLContactPageElement;
        new (): HTMLContactPageElement;
    };
    interface HTMLErrorMessageElement extends Components.ErrorMessage, HTMLStencilElement {
    }
    var HTMLErrorMessageElement: {
        prototype: HTMLErrorMessageElement;
        new (): HTMLErrorMessageElement;
    };
    interface HTMLMaFooterElement extends Components.MaFooter, HTMLStencilElement {
    }
    var HTMLMaFooterElement: {
        prototype: HTMLMaFooterElement;
        new (): HTMLMaFooterElement;
    };
    interface HTMLMaHeaderElement extends Components.MaHeader, HTMLStencilElement {
    }
    var HTMLMaHeaderElement: {
        prototype: HTMLMaHeaderElement;
        new (): HTMLMaHeaderElement;
    };
    interface HTMLMaHomeElement extends Components.MaHome, HTMLStencilElement {
    }
    var HTMLMaHomeElement: {
        prototype: HTMLMaHomeElement;
        new (): HTMLMaHomeElement;
    };
    interface HTMLMovieListElement extends Components.MovieList, HTMLStencilElement {
    }
    var HTMLMovieListElement: {
        prototype: HTMLMovieListElement;
        new (): HTMLMovieListElement;
    };
    interface HTMLMoviePopupElement extends Components.MoviePopup, HTMLStencilElement {
    }
    var HTMLMoviePopupElement: {
        prototype: HTMLMoviePopupElement;
        new (): HTMLMoviePopupElement;
    };
    interface HTMLMoviesPageElement extends Components.MoviesPage, HTMLStencilElement {
    }
    var HTMLMoviesPageElement: {
        prototype: HTMLMoviesPageElement;
        new (): HTMLMoviesPageElement;
    };
    interface HTMLSignupPageElement extends Components.SignupPage, HTMLStencilElement {
    }
    var HTMLSignupPageElement: {
        prototype: HTMLSignupPageElement;
        new (): HTMLSignupPageElement;
    };
    interface HTMLTheaterListElement extends Components.TheaterList, HTMLStencilElement {
    }
    var HTMLTheaterListElement: {
        prototype: HTMLTheaterListElement;
        new (): HTMLTheaterListElement;
    };
    interface HTMLTicketPageElement extends Components.TicketPage, HTMLStencilElement {
    }
    var HTMLTicketPageElement: {
        prototype: HTMLTicketPageElement;
        new (): HTMLTicketPageElement;
    };
    interface HTMLUcSideDrawerElement extends Components.UcSideDrawer, HTMLStencilElement {
    }
    var HTMLUcSideDrawerElement: {
        prototype: HTMLUcSideDrawerElement;
        new (): HTMLUcSideDrawerElement;
    };
    interface HTMLUcSpinnerElement extends Components.UcSpinner, HTMLStencilElement {
    }
    var HTMLUcSpinnerElement: {
        prototype: HTMLUcSpinnerElement;
        new (): HTMLUcSpinnerElement;
    };
    interface HTMLUpdateMovieElement extends Components.UpdateMovie, HTMLStencilElement {
    }
    var HTMLUpdateMovieElement: {
        prototype: HTMLUpdateMovieElement;
        new (): HTMLUpdateMovieElement;
    };
    interface HTMLUpdateTheaterElement extends Components.UpdateTheater, HTMLStencilElement {
    }
    var HTMLUpdateTheaterElement: {
        prototype: HTMLUpdateTheaterElement;
        new (): HTMLUpdateTheaterElement;
    };
    interface HTMLElementTagNameMap {
        "about-page": HTMLAboutPageElement;
        "add-movie": HTMLAddMovieElement;
        "add-theater": HTMLAddTheaterElement;
        "addth-movie": HTMLAddthMovieElement;
        "admin-home": HTMLAdminHomeElement;
        "app-root": HTMLAppRootElement;
        "book-ticket": HTMLBookTicketElement;
        "contact-page": HTMLContactPageElement;
        "error-message": HTMLErrorMessageElement;
        "ma-footer": HTMLMaFooterElement;
        "ma-header": HTMLMaHeaderElement;
        "ma-home": HTMLMaHomeElement;
        "movie-list": HTMLMovieListElement;
        "movie-popup": HTMLMoviePopupElement;
        "movies-page": HTMLMoviesPageElement;
        "signup-page": HTMLSignupPageElement;
        "theater-list": HTMLTheaterListElement;
        "ticket-page": HTMLTicketPageElement;
        "uc-side-drawer": HTMLUcSideDrawerElement;
        "uc-spinner": HTMLUcSpinnerElement;
        "update-movie": HTMLUpdateMovieElement;
        "update-theater": HTMLUpdateTheaterElement;
    }
}
declare namespace LocalJSX {
    interface AboutPage {
    }
    interface AddMovie {
    }
    interface AddTheater {
    }
    interface AddthMovie {
    }
    interface AdminHome {
    }
    interface AppRoot {
    }
    interface BookTicket {
        "movname"?: string;
    }
    interface ContactPage {
    }
    interface ErrorMessage {
        "message"?: string;
        "success"?: boolean;
    }
    interface MaFooter {
    }
    interface MaHeader {
    }
    interface MaHome {
    }
    interface MovieList {
    }
    interface MoviePopup {
        "onEventCheck"?: (event: MoviePopupCustomEvent<boolean>) => void;
    }
    interface MoviesPage {
    }
    interface SignupPage {
    }
    interface TheaterList {
    }
    interface TicketPage {
        "date"?: string;
        "movname"?: string;
        "price"?: number;
        "quan"?: number;
    }
    interface UcSideDrawer {
        "opened"?: boolean;
    }
    interface UcSpinner {
    }
    interface UpdateMovie {
    }
    interface UpdateTheater {
    }
    interface IntrinsicElements {
        "about-page": AboutPage;
        "add-movie": AddMovie;
        "add-theater": AddTheater;
        "addth-movie": AddthMovie;
        "admin-home": AdminHome;
        "app-root": AppRoot;
        "book-ticket": BookTicket;
        "contact-page": ContactPage;
        "error-message": ErrorMessage;
        "ma-footer": MaFooter;
        "ma-header": MaHeader;
        "ma-home": MaHome;
        "movie-list": MovieList;
        "movie-popup": MoviePopup;
        "movies-page": MoviesPage;
        "signup-page": SignupPage;
        "theater-list": TheaterList;
        "ticket-page": TicketPage;
        "uc-side-drawer": UcSideDrawer;
        "uc-spinner": UcSpinner;
        "update-movie": UpdateMovie;
        "update-theater": UpdateTheater;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "about-page": LocalJSX.AboutPage & JSXBase.HTMLAttributes<HTMLAboutPageElement>;
            "add-movie": LocalJSX.AddMovie & JSXBase.HTMLAttributes<HTMLAddMovieElement>;
            "add-theater": LocalJSX.AddTheater & JSXBase.HTMLAttributes<HTMLAddTheaterElement>;
            "addth-movie": LocalJSX.AddthMovie & JSXBase.HTMLAttributes<HTMLAddthMovieElement>;
            "admin-home": LocalJSX.AdminHome & JSXBase.HTMLAttributes<HTMLAdminHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "book-ticket": LocalJSX.BookTicket & JSXBase.HTMLAttributes<HTMLBookTicketElement>;
            "contact-page": LocalJSX.ContactPage & JSXBase.HTMLAttributes<HTMLContactPageElement>;
            "error-message": LocalJSX.ErrorMessage & JSXBase.HTMLAttributes<HTMLErrorMessageElement>;
            "ma-footer": LocalJSX.MaFooter & JSXBase.HTMLAttributes<HTMLMaFooterElement>;
            "ma-header": LocalJSX.MaHeader & JSXBase.HTMLAttributes<HTMLMaHeaderElement>;
            "ma-home": LocalJSX.MaHome & JSXBase.HTMLAttributes<HTMLMaHomeElement>;
            "movie-list": LocalJSX.MovieList & JSXBase.HTMLAttributes<HTMLMovieListElement>;
            "movie-popup": LocalJSX.MoviePopup & JSXBase.HTMLAttributes<HTMLMoviePopupElement>;
            "movies-page": LocalJSX.MoviesPage & JSXBase.HTMLAttributes<HTMLMoviesPageElement>;
            "signup-page": LocalJSX.SignupPage & JSXBase.HTMLAttributes<HTMLSignupPageElement>;
            "theater-list": LocalJSX.TheaterList & JSXBase.HTMLAttributes<HTMLTheaterListElement>;
            "ticket-page": LocalJSX.TicketPage & JSXBase.HTMLAttributes<HTMLTicketPageElement>;
            "uc-side-drawer": LocalJSX.UcSideDrawer & JSXBase.HTMLAttributes<HTMLUcSideDrawerElement>;
            "uc-spinner": LocalJSX.UcSpinner & JSXBase.HTMLAttributes<HTMLUcSpinnerElement>;
            "update-movie": LocalJSX.UpdateMovie & JSXBase.HTMLAttributes<HTMLUpdateMovieElement>;
            "update-theater": LocalJSX.UpdateTheater & JSXBase.HTMLAttributes<HTMLUpdateTheaterElement>;
        }
    }
}
